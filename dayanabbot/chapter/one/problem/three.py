import generator
import analysis
import plotter
from typing import List
DURATION_IN_MS = 100
RATE_IN_MS = 100 / 1000
BIN_LENGTH_IN_MS = 10


def autocorrelation_histogram(spikes: List[int], title: str):
    """Creates an autocorrelation histogram for the given spikes.

    Arguments:
        spikes {List[int]} -- A list of times (in ms) where spikes occur.
        title {string} -- The title of the graph.
    """
    ac, bins = analysis.autocorrelation(spikes, DURATION_IN_MS, BIN_LENGTH_IN_MS)
    plotter.autocorrelation(ac, bins, title)


def do():
    """
    Compute autocorrelation histograms of spike trains generated by a Poisson
    generator with a constant firing rate of 100 Hz,
    (Plot the histograms over a range from 0 to 100 ms).
    """
    constant = generator.short_way(DURATION_IN_MS, RATE_IN_MS)
    autocorrelation_histogram(
        constant, 'Constant firing rate, no refractory period')

    """
    a constant firing rate of 100 Hz together with a refractory period with
    a tau_ref of 10 ms,
    """
    tau_ref = 10
    refractory = generator.refractory(
        DURATION_IN_MS, RATE_IN_MS, tau_ref)
    autocorrelation_histogram(
        refractory, 'Constant firing rate, with refractory period')

    """
    and a variable firing rate r(t) = 100(1 + cos(2 * pi * t / 25ms)) Hz.
    """
    variable = generator.variable(DURATION_IN_MS)
    autocorrelation_histogram(variable, 'Variable firing rate')
